{
    "diagnostic.virtualText": true,
    "diagnostic.virtualTextCurrentLineOnly": false,
    "jedi.enable": true,
    "jedi.startupMessage": true,
    "jedi.markupKindPreferred": "plaintext",
    "jedi.trace.server": "off",
    "jedi.jediSettings.autoImportModules": [],
    "jedi.jediSettings.caseInsensitiveCompletion": true,
    "jedi.jediSettings.debug": false,
    "jedi.executable.command": "/Users/kawasatoshouetsu/Documents/development/nvim_venv/bin/jedi-language-server",
    "jedi.executable.args": [],
    "jedi.codeAction.nameExtractFunction": "jls_extract_def",
    "jedi.codeAction.nameExtractVariable": "jls_extract_var",
    "jedi.completion.disableSnippets": false,
    "jedi.completion.resolveEagerly": false,
    "jedi.completion.ignorePatterns": [],
    "jedi.diagnostics.enable": true,
    "jedi.diagnostics.didOpen": true,
    "jedi.diagnostics.didChange": true,
    "jedi.diagnostics.didSave": true,
    "jedi.hover.enable": true,
    "jedi.hover.disable.keyword.all": false,
    "jedi.hover.disable.keyword.names": [],
    "jedi.hover.disable.keyword.fullNames": [],
    "jedi.workspace.extraPaths": [],
    "jedi.workspace.symbols.maxSymbols": 20,
    "suggest.minTriggerInputLength": 3,
    "diagnostic-languageserver.formatFiletypes": {
        "python": ["black", "isort", "docformatter"]
    },
    "diagnostic-languageserver.formatters": {
        "black": {
            "command": "black",
            "args": ["-q", "-"]
        },
        "isort": {
            "command": "isort",
            "args": ["-q", "-"]
        },
        "docformatter": {
            "command": "docformatter",
            "args": ["-"]
        }
    },
    "diagnostic-languageserver.filetypes": {
        "python": "flake8"
    },
    "diagnostic-languageserver.linters": {
        "flake8": {
            "sourceName": "flake8",
            "command": "flake8",
            "debounce": 200,
            "rootPatterns": [".git", "pyproject.toml", "setup.py"],
            "args": [
                "--ignore=E402,C901,W503,W504,E116,E702,C0103,C0114,C0115,C0116,C0103,C0301,W0613,W0102,R0903,R0902,R0914,R0915,R0205,W0703,W0702,W0603",
                "--format=%(row)d,%(col)d,%(code).1s,%(code)s: %(text)s",
                "-"
            ],
            "offsetLine": 0,
            "offsetColumn": 0,
            "formatLines": 1,
            "formatPattern": [
                "(\\d+),(\\d+),([A-Z]),(.*)(\\r|\\n)*$",
                {
                    "line": 1,
                    "column": 2,
                    "security": 3,
                    "message": 4
                }
            ],
            "securities": {
                "W": "info",
                "E": "warning",
                "F": "info",
                "C": "info",
                "N": "hint"
            }
        }
        ,    "pylint": {
            "sourceName": "pylint",
            "command": "pylint",
            "args": [
                "--output-format",
                "text",
                "--score",
                "no",
                "--msg-template",
                "'{line}:{column}:{category}:{msg} ({msg_id}:{symbol})'",
                "%file"
            ],
            "formatPattern": [
                "^(\\d+?):(\\d+?):([a-z]+?):(.*)$",
                {
                    "line": 1,
                    "column": 2,
                    "security": 3,
                    "message": 4
                }
            ],
            "rootPatterns": [".git", "pyproject.toml", "setup.py"],
            "securities": {
                "informational": "hint",
                "refactor": "info",
                "convention": "info",
                "warning": "warning",
                "error": "error",
                "fatal": "error"
            },
            "offsetColumn": 1,
            "formatLines": 1
        }
    },
    "languageserver": {
        "ccls": {
            "command": "ccls",
            "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
            "rootPatterns": [".ccls", ".ccls-root", "compile_commands.json"],
            "initializationOptions": {
                "cache": {
                    "directory": "/tmp/ccls-cache"
                }
            }
        }
    }
}
